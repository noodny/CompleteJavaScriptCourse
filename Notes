// SECTION 4
Callback function - when a function even is triggering another function to execute 

Anonymous Function example
document.querySelector('.btn-roll').addEventListener('click', function() {
	// Function used insinde of a callback that doesn't have a name is called 
	// Anonymous function
});

// SECTION 5
CONSTRUCTORE / PROTOTYPE = CLASS - in other OOP langs 

INHERITANCE - one object is based on another object


* Every JavaScript object has a prototype property, which makes
inheritance possible in JavaScript;
* The prototype property of an object is where we put methods and 
properties that we want other object to inherit;
* The Constructor's prototype property is NOT the prototype of the 
Constructor itself, it's the prototype of ALL instances that are
created through it;
* When a certain method (or property) is called, the search starts
in the object itself, and if it cannot be found, the search moves on
to the object's prototype. This continues until the method is found:
PROTOTYPE CHAIN.

Immediately Invoked Functial Expreession

	Example: 
	(function () {
		var score = Math.random() * 10;
		console.log(score >= 5);
	})();

	* data / variable privary
	* modularity

Bind / Call / Apply

Call - method borrowing
	john.presentation.call(emily, 'friendly', 'afternoon');

Apply - method borrowing with array
	john.presentation.apply(emily, ['friendly', 'afternoon']);

Bind - returns a function - creates a function that returns a function for set parameters

var johnFriendly = john.presentation.bind(john,'friendly');
johnFriendly('morning');